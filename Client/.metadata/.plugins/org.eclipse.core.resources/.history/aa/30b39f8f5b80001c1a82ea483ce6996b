package rogala.client;

import javafx.application.Application;
import javafx.fxml.FXML;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.paint.ImagePattern;
import javafx.scene.shape.Circle;
import javafx.scene.web.WebView;
import javafx.stage.Stage;

import java.io.BufferedReader;
import java.io.File;
import java.io.PrintWriter;
import java.net.Socket;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;

public class ClientController implements AutoCloseable {
	
	@FXML
	TextField messageTextField;
	@FXML
	Label welcomeLabel;
	@FXML
	WebView webViewMessages;
	@FXML
	Circle circleImage;
	@FXML
	Image sendImageView;
	
	private String userName = "";
	private String senderName;
	private String host;
	private int port;
	
	private Socket socket;
	private BufferedReader inputBufferedReader;
	private PrintWriter outputPrintWriter;
	private final int PROTOCOL_PREFIX_LENGTH = 3;
	private Document messagesLayout;
	
	Task<Void> task;
	
	@FXML private void initialize() {
		String welcome = "Nice to see you there! This is a welcome message. Say hello to other users.";
		messagesLayout = Jsoup.parse(
				"<html><head><meta charset='UTF-8'>" +
				"</head><body><ul><li class=\"welcome\"><div class=\"message\"><div class=\"content\">" +
				welcome +
				"</div></div></li></ul></body></html>",
				"UTF-16",
				Parser.xmlParser()
				);
		webViewMessages.getEngine().loadContent(messagesLayout.html());
		webViewMessages.getEngine().setUserStyleSheetLocation(getClass().getResource("application.css").toString());
	}
	
	

	public String getUserName() {
		return userName;
	}



	public void setUserName(String userName) {
		this.userName = userName;
		welcomeLabel.setText("Hello " + this.userName + "!");
		Image myImage = new Image(new File("/client/src/main/resources/rogala/profilePictures/Dwayne.jpg").toURI().toString());
		System.out.println("it worked!");
		ImagePattern pattern = new ImagePattern(myImage);
		circleImage.setFill(pattern); }
	}



	public String getHost() {
		return host;
	}



	public void setHost(String host) {
		this.host = host;
	}
	
	public int getPort() {
		return port;
	}

	public void setPort(int port) {
		this.port = port;
	}

	@Override
	public void close() throws Exception {
		// TODO Auto-generated method stub
		if (socket != null) socket.close();
	}
	
	

}
