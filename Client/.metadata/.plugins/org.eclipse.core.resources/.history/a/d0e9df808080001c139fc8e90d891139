package rogala.client;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.URL;
import java.util.ResourceBundle;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.geometry.NodeOrientation;
import javafx.scene.Node;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.scene.shape.Circle;
import javafx.scene.web.WebView;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

import static rogala.client.ClientController.users;

public class Chat extends Thread implements Initializable {
	
@FXML Pane pnChat;
	
	@FXML TextField messageTextField;
	@FXML Label welcomeLabel;
	@FXML WebView webViewMessages;
	@FXML Circle circleImage;
	@FXML Image sendImageView;
	@FXML TextArea msgRoom;
	
	private FileChooser fileChooser;
    private File filePath;
    
    BufferedReader reader;
    PrintWriter writer;
    Socket socket;
    
    public void connectSocket() {
        try {
            socket = new Socket("localhost", 9001);
            System.out.println("Socket is connected with server!");
            reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            writer = new PrintWriter(socket.getOutputStream(), true);
            this.start();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    @Override
    public void run() {
        try {
            while (true) {
                String msg = reader.readLine();
                String[] tokens = msg.split(" ");
                String cmd = tokens[0];
                System.out.println(cmd);
                StringBuilder fulmsg = new StringBuilder();
                for(int i = 1; i < tokens.length; i++) {
                    fulmsg.append(tokens[i]);
                }
                System.out.println(fulmsg);
                if (cmd.equalsIgnoreCase(ClientController.username + ":")) {
                    continue;
                } else if(fulmsg.toString().equalsIgnoreCase("bye")) {
                    break;
                }
                msgRoom.appendText(msg + "\n");
            }
            reader.close();
            writer.close();
            socket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void handleSendEvent(MouseEvent event) {
        send();
        for(User user : users) {
            System.out.println(user.name);
        }
    }
    
    public void send() {
        String msg = messageTextField.getText();
        writer.println(ClientController.username + ": " + msg);
        msgRoom.setNodeOrientation(NodeOrientation.LEFT_TO_RIGHT);
        msgRoom.appendText("Me: " + msg + "\n");
        messageTextField.setText("");
        if(msg.equalsIgnoreCase("BYE") || (msg.equalsIgnoreCase("logout"))) {
            System.exit(0);
        }
    }
    
    public void sendMessageByKey(KeyEvent event) {
        if (event.getCode().toString().equals("ENTER")) {
            send();
        }
    }
    
    public boolean saveControl = false;

//    public void chooseImageButton(ActionEvent event) {
//        Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
//        fileChooser = new FileChooser();
//        fileChooser.setTitle("Open Image");
//        this.filePath = fileChooser.showOpenDialog(stage);
//        fileChoosePath.setText(filePath.getPath());
//        saveControl = true;
//    }
//    
//    public void saveImage() {
//        if (saveControl) {
//            try {
//                BufferedImage bufferedImage = ImageIO.read(filePath);
//                Image image = SwingFXUtils.toFXImage(bufferedImage, null);
//                proImage.setImage(image);
//                showProPic.setFill(new ImagePattern(image));
//                saveControl = false;
//                fileChoosePath.setText("");
//            } catch (IOException e) {
//                System.err.println(e.getMessage());
//            }
//        }
//    }

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		
		welcomeLabel.setText(ClientController.username);
        connectSocket();
		
	}

}
